"""added job_scheduler

Revision ID: 17f41460219f
Revises: 54050df9a5d7
Create Date: 2025-07-05 23:34:11.692733

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel # added


# revision identifiers, used by Alembic.
revision = '17f41460219f'
down_revision = '54050df9a5d7'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('jobscheduler',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('env_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('trigger_type', sa.Enum('on_start', 'repeat', name='jobschedulertriggertype'), nullable=False),
    sa.Column('repeat_every_seconds', sa.Integer(), nullable=True),
    sa.Column('job_template', sa.JSON(), nullable=False),
    sa.Column('enabled', sa.Boolean(), nullable=False),
    sa.Column('last_run', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('jobscheduler', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_jobscheduler_id'), ['id'], unique=False)

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('jobscheduler', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_jobscheduler_id'))

    op.drop_table('jobscheduler')
    # ### end Alembic commands ###
